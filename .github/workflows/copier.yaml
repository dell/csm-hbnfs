# Copyright (c) 2025 Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0

name: Copy Templates to Dell Repositories

on:  # yamllint disable-line rule:truthy
  # Invoked manually
  workflow_dispatch:
    inputs:
      config:
        description: "List of repositories"
        required: true
        type: choice
        options:
          - all-csm-repos.txt
          - csm-drivers-modules.txt
          - golibs.txt
          - test.txt
        default: "all-csm-repos.txt"

env:
  BRANCH_NAME: "add-dell-actions"
  # Need for GitHub CLI commands
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  copy-templates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout actions-template
        uses: actions/checkout@v4
        with:
          path: actions-template

      - name: Get repositories list
        run: |
          curl -o repositories.txt "https://raw.githubusercontent.com/dell/actions-template/main/.github/configs/${{ inputs.config }}"
          REPOS=$(cat repositories.txt)
          echo "REPOS=$REPOS" >> $GITHUB_ENV

      - name: Install copier
        run: |
          pip install copier

      # Needed for signing commits using Github App tokens
      # See: https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#commit-signing
      - uses: actions/create-github-app-token@v1.11.5
        id: generate-token
        with:
          app-id: ${{ vars.CSM_RELEASE_APP_ID }}
          private-key: ${{ secrets.CSM_RELEASE_APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"

      - name: Set up committers identity
        run: |
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git config --global user.name '${{ steps.generate-token.outputs.app-slug }}[bot]'

      - name: Copy templates to repositories
        env:
          REPOS: ${{ env.REPOS }}
        run: |
          for REPO in ${{ env.REPOS }}
          do
            echo "Cloning $REPO"
            git clone https://github.com/dell/$REPO.git $REPO
            cd $REPO

            echo "Copying actions-template to $REPO"
            copier copy ../actions-template . --overwrite

            git add .
            git restore --staged .github/configs LICENSE README.md
            git commit -S -m "Copy actions-template"
            git push origin ${{ env.BRANCH_NAME }}

            # Create PR
            gh auth login --with-token <<< "${{ steps.generate-token.outputs.token }}"
            gh pr create \
              --repo $REPO \
              --head ${{ env.BRANCH_NAME }} \
              --base main \
              --draft \
              --title "Add GH actions" \
              --body "This PR adds GH actions. Auto-generated by [actions-template](https://github.com/dell/actions-template)"

            cd ..
            rm -rf $REPO
          done
