// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-hbnfs/nfs (interfaces: OSInterface)
//
// Generated by this command:
//
//	mockgen -destination=mocks/os.go -package=mocks . OSInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	fs "io/fs"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockOSInterface is a mock of OSInterface interface.
type MockOSInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOSInterfaceMockRecorder
	isgomock struct{}
}

// MockOSInterfaceMockRecorder is the mock recorder for MockOSInterface.
type MockOSInterfaceMockRecorder struct {
	mock *MockOSInterface
}

// NewMockOSInterface creates a new mock instance.
func NewMockOSInterface(ctrl *gomock.Controller) *MockOSInterface {
	mock := &MockOSInterface{ctrl: ctrl}
	mock.recorder = &MockOSInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOSInterface) EXPECT() *MockOSInterfaceMockRecorder {
	return m.recorder
}

// Getenv mocks base method.
func (m *MockOSInterface) Getenv(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Getenv", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Getenv indicates an expected call of Getenv.
func (mr *MockOSInterfaceMockRecorder) Getenv(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Getenv", reflect.TypeOf((*MockOSInterface)(nil).Getenv), arg0)
}

// MkdirAll mocks base method.
func (m *MockOSInterface) MkdirAll(arg0 string, arg1 fs.FileMode) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MkdirAll", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// MkdirAll indicates an expected call of MkdirAll.
func (mr *MockOSInterfaceMockRecorder) MkdirAll(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MkdirAll", reflect.TypeOf((*MockOSInterface)(nil).MkdirAll), arg0, arg1)
}

// Stat mocks base method.
func (m *MockOSInterface) Stat(arg0 string) (fs.FileInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stat", arg0)
	ret0, _ := ret[0].(fs.FileInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Stat indicates an expected call of Stat.
func (mr *MockOSInterfaceMockRecorder) Stat(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stat", reflect.TypeOf((*MockOSInterface)(nil).Stat), arg0)
}
