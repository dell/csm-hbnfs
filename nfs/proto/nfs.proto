syntax = "proto3";
package nfs.proto.v1;
option go_package = "github.com/dell/csm-sharednfs/nfs/proto";

message ExportNfsVolumeRequest {
	string volume_id = 1;
	map<string, string> export_nfs_context = 2;
}

message ExportNfsVolumeResponse {
	string volume_id = 1;
	map<string, string> export_nfs_context = 2;
}

message UnexportNfsVolumeRequest {
	string volume_id = 1;
	map<string, string> unexport_nfs_context = 2;
}

message UnexportNfsVolumeResponse {
	string volume_id = 1;
	map<string, string> unexport_nfs_context = 2;
}

message PingRequest {
        string node_ip_address = 1;
        bool dumpAllExports = 2;
}

message PingResponse {
        bool ready = 1;
        string status = 2;
}

message GetExportsRequest {
}

message GetExportsResponse {
        repeated string exports = 1;
}

message ExportMultipleNfsVolumesRequest {
        repeated string volume_ids = 1;
        map<string, string> export_nfs_context = 2;
}

message ExportMultipleNfsVolumesResponse {
        repeated string successful_ids = 1;
        repeated string unsuccessful_ids = 2;
        map<string, string> export_nfs_context = 3;
}

message UnexportMultipleNfsVolumesRequest {
        repeated string volume_ids = 1;
        map<string, string> export_nfs_context = 2;
}

message UnexportMultipleNfsVolumesResponse {
        repeated string successful_ids = 1;
        repeated string unsuccessful_ids = 2;
        map<string, string> export_nfs_context = 3;
}

service Nfs {
	rpc ExportNfsVolume(ExportNfsVolumeRequest)
		returns (ExportNfsVolumeResponse) {}

	rpc UnexportNfsVolume(UnexportNfsVolumeRequest)
		returns (UnexportNfsVolumeResponse) {}

        rpc Ping(PingRequest) returns (PingResponse) {}

        rpc GetExports(GetExportsRequest) returns (GetExportsResponse) {}

        rpc ExportMultipleNfsVolumes(ExportMultipleNfsVolumesRequest)
                returns (ExportMultipleNfsVolumesResponse) {}

        rpc UnexportMultipleNfsVolumes(UnexportMultipleNfsVolumesRequest)
                returns (UnexportMultipleNfsVolumesResponse) {}
}
